name: Terraform Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays at midnight

permissions:
  contents: read
  pull-requests: write

jobs:
  checkov:
    name: Checkov Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip

      - name: Install latest Checkov
        run: |
          python -m pip install --upgrade pip
          pip install checkov

      - name: Run Checkov
        id: checkov
        run: |
          checkov --version
          checkov -d . --framework terraform --output cli --output sarif --output-file-path results.sarif --soft-fail
          # Check if the file exists and list all files for debugging
          echo "Contents of current directory:"
          ls -la
          echo "Looking for SARIF file:"
          find . -name "*.sarif" -type f
        continue-on-error: true

      - name: Generate Checkov report
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const checkPath = 'results.sarif'; 
            if (fs.existsSync(checkPath)) {
              const sarifResults = JSON.parse(fs.readFileSync(checkPath, 'utf8'));
              const results = sarifResults.runs[0].results || [];
              
              if (results.length === 0) {
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: 'üéâ **Checkov Security Scan**: No security issues found!'
                });
                return;
              }
              
              let failCount = 0;
              let reportBody = '## üîí Checkov Security Scan Results\n\n';
              
              for (const result of results) {
                if (result.level === 'error') {
                  failCount++;
                  const ruleId = result.ruleId;
                  const location = result.locations[0].physicalLocation.artifactLocation.uri;
                  const message = result.message.text;
                  const startLine = result.locations[0].physicalLocation.region.startLine;
                  
                  reportBody += `### ‚ùå ${ruleId}\n`;
                  reportBody += `**Location**: ${location} (line ${startLine})\n`;
                  reportBody += `**Description**: ${message}\n\n`;
                }
              }
              
              reportBody += `\n**Total Issues**: ${failCount}`;
              reportBody += '\n\nFor details and remediation steps, see the [Checkov documentation](https://www.checkov.io/).';
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: reportBody
              });
            } else {
              console.log('No SARIF results file found');
            }

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: results.sarif
          wait-for-processing: true